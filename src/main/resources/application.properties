spring.application.name=PointsAllocator
server.port=9003
#app and context configuration
server.servlet.context-path=/points-allocator-service
spring.mvc.servlet.path=/rest
springdoc.show-actuator=true
swagger.application.name=points-allocator-service
swagger.application.description=@project.description@
swagger.application.version=@project.version@
#Kafka Producer Configuration
#When kafka and this spring boot app are running on the same network, connect to kafka using the below
#i.e when they are deployed from the same docker-compose file
spring.kafka.bootstrap-servers=PLAINTEXT://kafka:29092
#When kafka and this spring boot app are running on the different network, connect to kafka using the below
#i.e when the app is not running on docker and maybe kafka is in docker
#spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.group-id=deviceDataWorkoutPointsConsumer
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.properties.spring.json.trusted.packages=*
#Consumer Topics
spring.kafka.consumer.topic.name=device.data.workout.points
#Producer Topics
spring.kafka.producer.topic.name=device.data.workout.notification
#database config for h2
spring.datasource.url=jdbc:h2:mem:points-db
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=points
spring.datasource.password=points
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
spring.jpa.defer-datasource-initialization=true
spring.h2.console.enabled=true
spring.h2.console.path=/h2-console/